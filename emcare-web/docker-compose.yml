version: '3'

services:
  web-app:
    build: ./
    environment:
      - KEYCLOACK_SERVER_URL=${KEYCLOACK_SERVER_URL}
      - KEYCLOACK_CLIENT_SECRET=${KEYCLOACK_CLIENT_SECRET}
      - KEYCLOACK_CLIENT_ID=${KEYCLOACK_CLIENT_ID}
      - KEYCLOACK_REALM=${KEYCLOACK_REALM}
      - KEYCLOACK_USER_NAME=${KEYCLOACK_USER_NAME}
      - KEYCLOACK_PASSWORD=${KEYCLOACK_PASSWORD}
      - KEYCLOACK_MASTER_USER_ID=${DB_USER}
      - KEYCLOACK_MASTER_USER_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_NAME=webapp
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USER=${DB_USER}
      - TWILLO_SSID=${TWILLO_SSID}
      - TWILLO_TOKEN=${TWILLO_TOKEN}
      - TWILLO_SID=${TWILLO_SID}
      - TWILLO_NUMBER=${TWILLO_NUMBER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_USER=${MAIL_USER}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - IBM_KEY=${IBM_KEY}
    depends_on:
      - postgres

  nginx:
    image: nginx:1.15.1
    container_name: nginx
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "4580:8080"
    depends_on:
      - keycloak
      - web-app

  keycloak:
     image: jboss/keycloak:15.0.2
     restart: on-failure
     command:
      - "-b"
      - "0.0.0.0"
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=dir"
      - "-Dkeycloak.migration.dir=/config/"
      - "-Dkeycloak.migration.strategy=IGNORE_EXISTING"
     volumes:
       - ./config:/config/
     environment:
       - KEYCLOAK_USER=${KEYCLOACK_USER_NAME}
       - KEYCLOAK_PASSWORD=${KEYCLOACK_PASSWORD}
       - DB_VENDOR=postgres
       - DB_USER=${DB_USER}
       - DB_PASSWORD=${DB_PASSWORD}
       - DB_ADDR=postgres
       - DB_PORT=5432
       - DB_DATABASE=keycloakdb
     ports:
       - "8180:8080"
     depends_on:
       - postgres

  postgres:
    image: postgres:10
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: keycloakdb, webapp
    volumes:
      - ./multi-db-docker:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
